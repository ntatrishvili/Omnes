digraph "classes_ProjectName" {
rankdir=BT
charset="utf-8"
"app.model.battery.Battery" [color="black", fontcolor="black", label=<{Battery|capacity : int<br ALIGN="LEFT"/>max_power : int<br ALIGN="LEFT"/>timeseries : dict<br ALIGN="LEFT"/>|get_capacity()<br ALIGN="LEFT"/>get_injection_pulp_empty(time_set: int)<br ALIGN="LEFT"/>get_max_power()<br ALIGN="LEFT"/>get_soc_pulp_empty(time_set: int)<br ALIGN="LEFT"/>get_withdrawal_pulp_empty(time_set: int)<br ALIGN="LEFT"/>convert(time_set: int, frequency: str)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.consumer.Consumer" [color="black", fontcolor="black", label=<{Consumer|timeseries : dict<br ALIGN="LEFT"/>|get_consumption(): pd.DataFrame<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.model.Model" [color="black", fontcolor="black", label=<{Model|frequency : str<br ALIGN="LEFT"/>identifier : str<br ALIGN="LEFT"/>time_set : int<br ALIGN="LEFT"/>units : list[Unit]<br ALIGN="LEFT"/>|add_unit(unit: Unit)<br ALIGN="LEFT"/>build(config: dict, time_set: int, frequency: str)<br ALIGN="LEFT"/>convert()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.pv.PV" [color="black", fontcolor="black", label=<{PV|timeseries : dict<br ALIGN="LEFT"/>|get_production(): pd.DataFrame<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.slack.Slack" [color="black", fontcolor="black", label=<{Slack|id : str<br ALIGN="LEFT"/>timeseries : dict<br ALIGN="LEFT"/>|get_flow_in()<br ALIGN="LEFT"/>get_flow_out()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.timeseries_object.TimeseriesObject" [color="black", fontcolor="black", label=<{TimeseriesObject|data : DataFrame<br ALIGN="LEFT"/>freq : timedelta<br ALIGN="LEFT"/>|normalize_freq(freq: str): str<br ALIGN="LEFT"/>read(input_path: str, col: str): 'TimeseriesObject'<br ALIGN="LEFT"/>resample_to(new_freq, method, agg): 'TimeseriesObject'<br ALIGN="LEFT"/>to_15m(): 'TimeseriesObject'<br ALIGN="LEFT"/>to_1h(): 'TimeseriesObject'<br ALIGN="LEFT"/>to_df(): pd.DataFrame<br ALIGN="LEFT"/>convert(name: str, freq: str, time_set: int)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.unit.Unit" [color="black", fontcolor="black", label=<{Unit|id : str<br ALIGN="LEFT"/>parent : NoneType<br ALIGN="LEFT"/>subunits : list[Unit]<br ALIGN="LEFT"/>timeseries : defaultdict<br ALIGN="LEFT"/>|add_unit(unit): None<br ALIGN="LEFT"/>convert(time_set: int, new_freq: str)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.model.battery.Battery" -> "app.model.unit.Unit" [arrowhead="empty", arrowtail="none"];
"app.model.consumer.Consumer" -> "app.model.unit.Unit" [arrowhead="empty", arrowtail="none"];
"app.model.pv.PV" -> "app.model.unit.Unit" [arrowhead="empty", arrowtail="none"];
"app.model.slack.Slack" -> "app.model.unit.Unit" [arrowhead="empty", arrowtail="none"];
}
